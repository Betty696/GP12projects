//=============================================================================
//
// ゲームモードの処理 [game.cpp]
// Author : 川井一生
/*
ゲームモードの状態の時処理する

ゲーム自体の処理の一括管理
*/
//=============================================================================
#include "main.h"
#include "game.h"

#include "input.h"
#include "fade.h"
//===============================================
// チャラ	character


//===============================================
// 環境		environment
#include "game BG.h"

//===============================================
// アイテム


//===============================================
// UI


//===============================================
// その他	etc




//=============================================================================
// マクロ定義


//=============================================================================
// プロトタイプ宣言

//=============================================================================
// グローバル変数

//=============================================================================
// ゲームモードの初期化処理
void InitGame(int oldMode)
{
	switch (oldMode)
	{
	case MODE_NULL:
		// 初めての初期化
		/*何も初期化されていあないと想定して、ゲーム画面内で使うものを全部初期化*/

		InitGameBG();

		break;

	case MODE_TITLE:
		// タイトルになかった物だけ初期化
		/*タイトル画面からゲーム画面へ切り替わった時に、タイトルで初期化されなかったものを初期化*/
		/*注意*/
		/*タイトル画面で初期化されたものはリセット処理が必要な時がある*/

		//=========================
		// 初期化
		InitGameBG();

		//=========================
		// リセット

		break;
	case MODE_RESULT:
		// リザルトになかった物だけ初期化
		/*リザルト画面からゲーム画面へ切り替わった時に、リザルトで初期化されなかったものを初期化*/
		/*注意*/
		/*リザルト画面で初期化されたものはリセット処理が必要な時がある*/

		//=========================
		// 初期化
		InitGameBG();

		//=========================
		// リセット

		break;

	}
	return;
}

//=============================================================================
// ゲームモードの初期化処理
void UninitGame(int mode)
{
	switch (mode)
	{
	case MODE_TITLE:
		// タイトルに使わないものをリリース
		/*ゲーム画面からタイトル画面へ切り替えるときに、タイトル画面で使わないものをリリース処理をする*/

		UninitGameBG();

		break;

	case MODE_RESULT:
		// リザルトに使わないものをリリース
		/*ゲーム画面からリザルト画面へ切り替えるときに、リザルト画面で使わないものをリリース処理をする*/

		UninitGameBG();

		break;
	}
}

//=============================================================================
// ゲームモードの最新処理
void UpdateGame(void)
{
	/*ここではほかで書いたアップデートを呼ぶ*/
	/*↓↓↓こんな感じ*/


	UpdateGameBG();

	if (GetKeyboardTrigger(DIK_NUMPAD0))
	{
		SetFade(FADE_OUT, MODE_RESULT);
	}

}

//=============================================================================
// ゲームモードの描画処理
void DrawGame(void)
{

	/*ここではほかで書いたドローを呼ぶ*/
	/*↓↓↓こんな感じ*/

	DrawGameBG();
}
